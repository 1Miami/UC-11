/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sosrs;

import java.util.List;
import java.util.Arrays;
import sosrs.DoencaManager;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/**
 *
 * @author Lopes
 */
public class EditarD extends javax.swing.JFrame {
private DoencaManager doencaManager;
    /**
     * Creates new form EditarD
     */
    public EditarD() {
        doencaManager = DoencaManager.getInstance();
        initComponents();
        carregarDoencas();
        setupEvents();
    }
   private void editarDoenca() {
       String nomeOriginal = (String) ComboxSelecionarDoenca.getSelectedItem();
    if (nomeOriginal != null) {
        Doenca doenca = doencaManager.getDoencas().stream()
            .filter(d -> d.getNome().equals(nomeOriginal))
            .findFirst()
            .orElse(null);
        if (doenca != null) {
            System.out.println("Sintomas antes: " + txtfieldmudarsintomas.getText()); // Debug
            List<String> sintomasLimpos = Arrays.stream(txtfieldmudarsintomas.getText().split(","))
                .map(String::trim) // Remover espaços ao redor dos sintomas
                .filter(s -> !s.isEmpty()) // Remover sintomas vazios
                .toList();
            System.out.println("Sintomas limpos: " + sintomasLimpos); // Debug
            doenca.setSintomas(sintomasLimpos);
            
            doenca.setTratamento(txtfieldmudartratamento1.getText().trim());
            doenca.setInformacoes(txtfieldmudarsobre.getText().trim());
            doenca.setPicada(SeforPicada.isSelected());
            
            doencaManager.atualizarDoenca(nomeOriginal, doenca);

            JOptionPane.showMessageDialog(this, "Doença atualizada com sucesso!");
            carregarDoencas();
            }
        }
    }
   
private void carregarDoencas() {
        ComboxSelecionarDoenca.removeAllItems();
        for (Doenca doenca : doencaManager.getDoencas()) {
            ComboxSelecionarDoenca.addItem(doenca.getNome());
        }
    }

private void setupEvents() {
        ComboxSelecionarDoenca.addActionListener(e -> carregarDadosDoenca());
        ButtonMandarAlteracoes.addActionListener(e -> editarDoenca());
    }


 private void carregarDadosDoenca() {
         String nomeDoenca = (String) ComboxSelecionarDoenca.getSelectedItem();
    if (nomeDoenca != null) {
        Doenca doenca = doencaManager.getDoencas().stream()
            .filter(d -> d.getNome().equals(nomeDoenca))
            .findFirst()
            .orElse(null);
        if (doenca != null) {
            txtfieldmudarnomedoenca.setText(doenca.getNome());
            
            // Juntar sintomas com uma vírgula e espaço
            txtfieldmudarsintomas.setText(String.join(", ", doenca.getSintomas()));
            
            txtfieldmudartratamento1.setText(doenca.getTratamento());
            txtfieldmudarsobre.setText(doenca.getInformacoes());
            SeforPicada.setSelected(doenca.isPicada());
            }
        }
    }
 
 
private void ComboxSelecionarDoencaActionPerformed(java.awt.event.ActionEvent evt) {
        String nomeDoencaSelecionada = (String) ComboxSelecionarDoenca.getSelectedItem();
        Doenca doenca = DoencaManager.getInstance().getDoenca(nomeDoencaSelecionada);
        if (doenca != null) {
            txtfieldmudarnomedoenca.setText(doenca.getNome());
            txtfieldmudarsintomas.setText(String.join(",", doenca.getSintomas()));
            txtfieldmudartratamento1.setText(doenca.getTratamento());
            txtfieldmudarsobre.setText(doenca.getInformacoes());
            SeforPicada.setSelected(doenca.isPicada());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ComboxSelecionarDoenca = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtfieldmudarnomedoenca = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtfieldmudarsintomas = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtfieldmudarsobre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtfieldmudartratamento1 = new javax.swing.JTextField();
        ButtonMandarAlteracoes = new javax.swing.JButton();
        SeforPicada = new javax.swing.JCheckBox();

        jLabel1.setText("Selecione a doença abaixo!");

        txtfieldmudarnomedoenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldmudarnomedoencaActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome da Doença!");

        jLabel3.setText("Sintomas!");

        jLabel4.setText("Tratamento!");

        jLabel5.setText("Sobre!");

        ButtonMandarAlteracoes.setText("Enviar Alterações");
        ButtonMandarAlteracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMandarAlteracoesActionPerformed(evt);
            }
        });

        SeforPicada.setText("Foi picada?");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ButtonMandarAlteracoes, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addComponent(txtfieldmudartratamento1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtfieldmudarsintomas)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtfieldmudarnomedoenca)
                                .addComponent(ComboxSelecionarDoenca, 0, 226, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtfieldmudarsobre)
                    .addComponent(SeforPicada, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(300, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(ComboxSelecionarDoenca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfieldmudarnomedoenca, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfieldmudarsintomas, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfieldmudartratamento1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfieldmudarsobre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SeforPicada)
                .addGap(30, 30, 30)
                .addComponent(ButtonMandarAlteracoes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtfieldmudarnomedoencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldmudarnomedoencaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfieldmudarnomedoencaActionPerformed

    private void ButtonMandarAlteracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMandarAlteracoesActionPerformed
       editarDoenca();
    }//GEN-LAST:event_ButtonMandarAlteracoesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonMandarAlteracoes;
    private javax.swing.JComboBox<String> ComboxSelecionarDoenca;
    private javax.swing.JCheckBox SeforPicada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtfieldmudarnomedoenca;
    private javax.swing.JTextField txtfieldmudarsintomas;
    private javax.swing.JTextField txtfieldmudarsobre;
    private javax.swing.JTextField txtfieldmudartratamento1;
    // End of variables declaration//GEN-END:variables
}
